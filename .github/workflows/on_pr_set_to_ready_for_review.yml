name: On PR set to Ready for Review

on:
  pull_request:
    types: [ready_for_review]

jobs:
  handle-pr-opened:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract PR info
        id: extract_PR
        run: |
          PR_URL="${{ github.event.pull_request.html_url }}"
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          WORK_ITEM_ID=$(echo "$BRANCH_NAME" | grep -oE '[0-9]+' | head -n 1)
          TARGET_BRANCH="${{ github.event.pull_request.base.ref }}"
          echo "pr_url=$PR_URL" >> $GITHUB_OUTPUT
          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "work_item_id=$WORK_ITEM_ID" >> $GITHUB_OUTPUT

          
      - name: Extract Actor Info
        id: extract_actor
        run: |
          ACTOR="${{ github.actor }}"
          echo "Actor: $ACTOR"
      
          # Fetch user details from GitHub API
          RESPONSE=$(curl -s https://api.github.com/users/$ACTOR)
          ACTOR_AVATAR_URL=$(echo "$RESPONSE" | jq -r '.avatar_url')
          ACTOR_NAME=$(echo "$RESPONSE" | jq -r '.name')
      
          # Fallback to login if name is null
          if [ "$NAME" = "null" ]; then
            NAME="$ACTOR"
          fi
      
          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "avatar_url=$AVATAR_URL" >> $GITHUB_OUTPUT


      - name: Update Azure DevOps work item state and add PR comment
        if: steps.extract_PR.outputs.work_item_id != ''
        env:
          AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
        run: |
          WORK_ITEM_ID="${{ steps.extract_PR.outputs.work_item_id }}"
          PR_URL="${{ steps.extract_PR.outputs.pr_url }}"
          ORG="${{ vars.AZURE_DEVOPS_ORG }}"
          PROJECT="${{ vars.AZURE_DEVOPS_PROJECT }}"

          # Get current state of the work item
          CURRENT_STATE=$(curl -s -u ":$AZURE_DEVOPS_PAT" \
            -H "Accept: application/json" \
            "https://dev.azure.com/$ORG/$PROJECT/_apis/wit/workitems/$WORK_ITEM_ID?api-version=7.1-preview.3" \
            | jq -r '.fields["System.State"]')

          echo "Current state: $CURRENT_STATE"

          if [ "$CURRENT_STATE" != "Ready for Code Review" ]; then
            echo "Updating state to 'Ready for Code Review'..."
            PATCH_DATA=$(jq -n '[{ "op": "add", "path": "/fields/System.State", "value": "Ready for Code Review" }]')          
            curl -X PATCH \
              -u ":$AZURE_DEVOPS_PAT" \
              -H "Content-Type: application/json-patch+json" \
              -d "$PATCH_DATA" \
              "https://dev.azure.com/$ORG/$PROJECT/_apis/wit/workitems/$WORK_ITEM_ID?api-version=7.1-preview.3"
          else
            echo "Work item already in 'Ready for Code Review' state. Skipping update."
          fi

          # Add comment with PR link
          COMMENT_HTML="PR is Ready for Code Review: <a href=\"$PR_URL/files\">$PR_URL</a><br/><br/>User Story state set to 'Ready for Code Review'<br/><br/><small>- Comment created by GitHub Action ðŸ¤–</small>"
          curl -X POST \
            -u ":$AZURE_DEVOPS_PAT" \
            -H "Content-Type: application/json" \
            -d "$(jq -n --arg text "$COMMENT_HTML" '{text: $text}')" \
            "https://dev.azure.com/$ORG/$PROJECT/_apis/wit/workItems/$WORK_ITEM_ID/comments?api-version=7.1-preview.3"

      - name: Get GIF URL
        id: GetGIF
        run: |
          RESPONSE=$(curl -s https://cataas.com/cat/gif?json=true)
          GIF_URL=$(echo "$RESPONSE" | jq -r '.url')
          echo "GIF_URL=$GIF_URL" >> $GITHUB_OUTPUT

      - name: Notify Teams with Adaptive Card
        if: steps.extract_PR.outputs.work_item_id != ''
        env:
          TEAMS_WEBHOOK_URL: ${{ secrets.PULL_REQUESTS_TEAMS_WEBHOOK_URL }}
        run: |
          echo "ðŸ”§ Preparing Teams notification..."

          PR_URL="${{ steps.extract_PR.outputs.pr_url }}"
          REPO_NAME="${{ github.event.repository.name }}"
          BRANCH_NAME="${{ steps.extract_PR.outputs.branch }}"         
          TARGET_NAME="${{ steps.extract_PR.outputs.target_branch }}"
          WORK_ITEM_ID="${{ steps.extract_PR.outputs.work_item_id }}"
          GIF_URL= "${{ steps.GetGIF.outputs.GIF_URL }}"
          ACTOR_NAME ="${{ steps.extract_actor.outputs.actor_name }}"
          ACTOR_AVATAR_URK ="${{ steps.extract_actor.outputs.actor_avatar_url }}"

          BRANCH_URL="https://github.com/$REPO/tree/$BRANCH_NAME"
          TARGET_BRANCH_URL="https://github.com/$REPO/tree/$TARGET_BRANCH"
          
          ORG="${{ vars.AZURE_DEVOPS_ORG }}"
          PROJECT="${{ vars.AZURE_DEVOPS_PROJECT }}"
          WORK_ITEM_URL="https://dev.azure.com/$ORG/$PROJECT/_workitems/edit/$WORK_ITEM_ID"

          echo "ðŸ“¦ PR URL: $PR_URL"
          echo "ðŸŒ¿ Branch: $BRANCH_NAME"
          echo "ðŸ§© Work Item ID: $WORK_ITEM_ID"
          echo "ðŸ”— Work Item URL: $WORK_ITEM_URL"
          
          CARD=$(cat <<EOF
          {
            "type": "message",
            "attachments": [
              {
                "contentType": "application/vnd.microsoft.card.adaptive",
                "content": {
                  "type": "AdaptiveCard",
                  "speak": "3 minute energy flow with kayo video",
                  "$schema": "https://adaptivecards.io/schemas/adaptive-card.json",
                  "version": "1.5",
                  "body": [
                      {
                          "type": "Image",
                          "url": "$GIF_URL?position=center",
                          "style": "RoundedCorners"
                      },
                      {
                          "type": "TextBlock",
                          "text": "Pull Request Ready for Review",
                          "wrap": true,
                          "size": "Large",
                          "weight": "Bolder"
                      },
                      {
                          "type": "ColumnSet",
                          "columns": [
                              {
                                  "type": "Column",
                                  "width": "auto",
                                  "verticalContentAlignment": "Center",
                                  "items": [
                                      {
                                          "type": "Icon",
                                          "name": "Branch",
                                          "size": "Small"
                                      }
                                  ]
                              },
                              {
                                  "type": "Column",
                                  "width": "stretch",
                                  "spacing": "Small",
                                  "verticalContentAlignment": "Center",
                                  "items": [
                                      {
                                      "type": "RichTextBlock",                            
                                      "inlines": [
                                          {
                                            "type": "TextRun",
                                            "text": "$BRANCH_NAME",
                                            "fontType": "Monospace",
                                            "color": "Accent",                                            
                                            "selectAction": {
                                                "type": "Action.OpenUrl",
                                                "url": "%BRANCH_URL"
                                            }
                                          },
                                          {
                                            "type": "TextRun",
                                            "text": " into "
                                          },
                                          {
                                            "type": "TextRun",
                                            "text": "$TARGET_BRANCH",
                                            "fontType": "Monospace",
                                            "color": "Accent",                                            
                                            "selectAction": {
                                                "type": "Action.OpenUrl",
                                                "url": "%TARGET_URL"
                                            }
                                          }
                                        ]
                                      }
                                  ]
                              }
                          ]
                      },
                      {
                          "type": "ColumnSet",
                          "columns": [
                              {
                                  "type": "Column",
                                  "width": "auto",
                                  "verticalContentAlignment": "Center",
                                  "items": [
                                      {
                                          "type": "Icon",
                                          "name": "Home",
                                          "size": "Small"
                                      }
                                  ]
                              },
                              {
                                  "type": "Column",
                                  "width": "stretch",
                                  "spacing": "Small",
                                  "verticalContentAlignment": "Center",
                                  "items": [
                                      {
                                          "type": "TextBlock",
                                          "text": "$REPO_NAME",
                                          "wrap": true
                                      }
                                  ]
                              }
                          ]
                      },
                      {
                          "type": "ColumnSet",
                          "columns": [
                              {
                                  "type": "Column",
                                  "width": "auto",
                                  "verticalContentAlignment": "Center",
                                  "items": [
                                      {
                                          "type": "Image",
                                          "url": "$ACTOR_AVATAR_URL",
                                          "width": "24px",
                                          "height": "24px",
                                          "style": "Person",
                                          "altText": "By $ACTOR_NAME"
                                      }
                                  ]
                              },
                              {
                                  "type": "Column",
                                  "width": "stretch",
                                  "spacing": "Small",
                                  "verticalContentAlignment": "Center",
                                  "items": [
                                      {
                                          "type": "TextBlock",
                                          "text": "By $ACTOR_NAME",
                                          "wrap": true
                                      }
                                  ]
                              }
                          ]
                      },
                      {
                          "type": "ActionSet",
                          "actions": [
                              {
                                  "type": "Action.OpenUrl",
                                  "title": "User Story #$WORK_ITEM_ID",
                                  "url": "$WORK_ITEM_URL",
                                  "iconUrl": "icon:BookOpen"
                              },
                              {
                                  "type": "Action.OpenUrl",
                                  "title": "View Pull Request",
                                  "url": "$PR_URL",
                                  "iconUrl": "icon:CodeBlock"
                              }
                          ],
                          "horizontalAlignment": "Left"
                      }
                  ]
                  
                }
              }
            ]
          }
          EOF
          ) 
      
          RESPONSE=$(curl -s -w "%{http_code}" -o response_body.txt -X POST "$TEAMS_WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -d "$CARD")
          
          echo "HTTP Status Code: $RESPONSE"
          echo "Response Body:"
          cat response_body.txt


          echo "âœ… Teams notification sent."

